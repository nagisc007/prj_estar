# -*- coding: utf-8 -*-
"""Chapter 05: the red-chain
"""
import os
import sys
sys.path.append(os.path.join(os.path.dirname(__file__), '../..'))
sys.path.append('storybuilder')

from storybuilder.builder import world as wd
from src.redchain import config as cnf
THM = cnf.THEMES


# scenes
def sc_gobacktown(w: wd.World):
    ma = w.masuda
    return w.scene("帰郷",
            ma.be(w.stage.train, "新幹線").d("新幹線の車窓からは",
                "ただ闇に飲まれた海とその手前にぽつりぽつりと灯る町の明かりを見ることができた"),
            ma.deal().d("町に着くまでに何とか取材したものを記事の文章としてまとめようとスマートフォンに向かっていたが",
                "どうにも若い世代の記者たちのようにするするとそこで書いたりはできないな",
                "と$Hは感じてしまう"),
            ma.look().d("結局鞄に仕舞うと",
                "腕を大きく上げて伸びをした。",
                "車内は六割程度埋まっていたが",
                "糸川町で下りる人間は$Hくらいなものだろう"),
            ma.think().d("何故$n_hidekoはこの町で下りたのか"),
            ma.think().d("彼女と$st_townを繋ぐ何かについて何一つ浮かばない。",
                "それは情報が足りないからなのか",
                "それとも自分の想像力の欠如なのか",
                "もともとそんな理由や意味なんてどこにもなかったのか。",
                "分からない"),
            ma.think("今回の調査について").d("$ln_sugiokaならもっと上手く調べられたのだろうか"),
            ma.deal().d("そんなことをぼんやり考えていると",
                "ついさっき鞄に仕舞ったスマートフォンがメールの着信を伝えた"),
            ma.look("杉岡からの連絡").d("見れば$ln_sugiokaからだ"),
            ma.talk().t("え？"),
            ma.deal().d("そのメールには$n_hidekoについて話したいことがあるから今から会えないか",
                "と書かれていた"),
            )

def sc_sugiokatalk(w: wd.World):
    ma, sugi = w.masuda, w.sugioka
    return w.scene("杉岡の話",
            ma.go().d("駅前でタクシーを拾った時には既に九時を回っていた"),
            ma.come(w.stage.bar).d("$ln_sugiokaと飲む時は決まって彼の行きつけのスナックなのだが",
                "この日はどういう訳か焼き鳥の臭いが充満する喧騒の多いチェーン店の大衆居酒屋だった"),
            sugi.talk().t("おっ", "悪いね"),
            ma.look().d("店のカウンター席の隅に座っていた彼は既に目元が赤く",
                "いつもならパリッとしたスーツ姿のことが多いのだが",
                "アロハのような派手な柄のシャツを着て",
                "その胸のところにサングラスをぶら下げていた"),
            ma.talk(w.sugioka, w.hideko).t("$sugisan", "わざわざ呼び出しまでして話したいとか珍しいですね"),
            ma.behav().d("右隣に座って足元の籠に鞄を入れると", "同じ焼串とビールを注文する"),
            sugi.talk().t("そんなことはないだろう？",
                "今までだって面と向かって話さなきゃならない時はこうして呼び出してたよ"),
            ma.think().d("それならいつもメールかＬＩＮＥで済ませているのは大事な話じゃないということだろうか",
                "と言い返そうかと思ったが",
                "ビールのジョッキを店員に渡して日本酒を注文したのを見て",
                "いつものノリではないのだと理解した"),
            ma.ask().t("それで$sugisanから教えてもらった$n_hidekoなんですが……"),
            ma.have().d("目の前にやってきた中ジョッキから一口飲むと",
                "頷きながら砂肝を食べる$ln_sugiokaに",
                "彼女の知人たちに会って聞いたことを簡単に掻い摘んで話した"),
            ma.look().d("普段なら取材の仕方についての注意やもっと情報が引き出せたはずだと突っ込みが入るのだが",
                "この日は程よい相槌だけを返して余計な口は挟まなかった"),
            ma.talk().t("でも結局彼女が女優を辞めてからの足取りは何も掴めませんでしたよ。",
                "一体どうやってこの町に流れ着いたのか。",
                "どうしてあの空き家で亡くなったのか。",
                "本当に知りたいことが全然分からないままです"),
            ma.think().d("そう口にして苦笑する。",
                "自分の能力の無さがそんなへらへらとした無様を晒すのだと分かっていたけれど",
                "$ln_sugiokaの視線を前にするといつもこうなってしまう"),
            ma.deal("自分の仕入れた話"),
            sugi.talk("よくそこまで調べたな").t("よくそこまで調べたじゃないか"),
            ma.ask().t("え？"),
            ma.think().d("珍しく自分を褒める彼の言葉に",
                "手にしたネギマの焼け焦げてべっとりしたネギが",
                "右の口の端に付いてしまった"),
            sugi.talk().t("$meも同じようなもんだよ。",
                "まあ女優時代の資料は結構揃ってたんで$masudaよりはもっと詳しい情報持ってるけど",
                "それ以外は大差ない。",
                "いや寧ろアイドル時代のマネージャーの話がある分",
                "$masudaの方が上かもな"),
            ma.ask().t("$sugisan", "ひょっとしてかなり酔ってます？"),
            ma.look().d("酒にはかなり強い方だと思っていたが",
                "いつもに比べると目元から強い赤みが広がっている。",
                "よく見ると耳が真っ赤だった"),
            sugi.talk().t("ここのところ忙しかったから疲れてるのかも知れないな。",
                "けど呂律が回らなくなるほどじゃないよ"),
            ma.look().d("そう笑って見せるのだが",
                "どうにも調子が狂う。",
                "$n_sugiokaという男はいつでもスマートで笑顔が似合って世の中年女性から黄色い声を貰う",
                "$Hからしてみればそういう見上げるべき存在なのだ"),
            ma.look().d("けれど",
                    "今時分の隣に座って焼き鳥を食べて日本酒に吐息を漏らしているのは",
                    "四十手前の", "夜ともなれば無精髭が伸びてくる男のそれだった"),
            ma.hear(sugi, "彼の調査"),
            ma.think("結局杉岡の方が調べていた"),
            sugi.talk("彼女の男の話").t("ところでそっちで$ln_husbandという男の話は出たか？"),
            ma.think().d("それは全く耳にしたことのない名前だった"),
            sugi.talk().t("実は$n_hidekoと学生時代から親交があって",
                    "女優を始めたばかりの時期にごく一部の週刊誌で交際していると小さな記事が出たことがあるらしい"),
            ma.talk().t("そういえば男女関係の話は女優時代の事務所社長の件を除くと",
                    "ほとんどありませんでした。",
                    "おそらく浮いた話の出るようなタイプじゃなかったんでしょう。",
                    "役者仲間からはその真面目さが高く評価されてましたし"),
            ma.look().d("彼はその話に自分も同じ印象だったと頷くと",
                    "ウーロン茶を注文してからその$ln_husbandという男についての続きを口にする"),
            sugi.talk().t("$n_hidekoもそうだが", "この$ln_husbandという男もあまり他人と親交があるタイプではなかったみたいで",
                    "学生時代を知る何人かに当たってみても”そんな名前の同級生いたかな？”という声ばかりだった"),
            ma.ask().t("そんなところまでこの短期間で調べられたんですか？"),
            sugi.reply().t("たまたまだよ。",
                    "$meの東京の知人と会ってる時に$n_hidekoの話題になってさ",
                    "そしたら以前特集しようとしたことがあったらしくて。",
                    "結局その番組は企画倒れだったそうだけどその時に色々と調べた中で出てきた話を聞いただけだよ"),
            ma.look().d("それが謙遜だ", "というのは$ln_sugiokaが右の人差し指で鼻頭を少し掻いた仕草で分かった。",
                    "けれど常に誰かから情報を貰うという立場である記者としては",
                    "それを自分の手柄のように思ったり況してや自分の意見や知識そのものだと思い込むことが何より危険だと",
                    "彼は言っていた"),
            ma.think().d("だからこの情報を手に入れるのにどんな苦労があったのかは分からないが",
                    "自分の為にひょっとすると無理をしてくれたのだろうかと考えると",
                    "いつも以上に$ln_sugiokaに対して頭が上がらない気持ちで一杯になる"),
            ma.know("付き合っていたのは別の学生時代からの男"),
            sugi.talk().t("まあどれだけ調べてみたところで大本営発表があるまではうちじゃ死にネタなんだけどな"),
            ma.ask().t("まだデスクは$ln_okumuraさんでしたっけ？"),
            sugi.talk().t("ああ。",
                    "絶対に間違ったことは記事にしない。",
                    "そういう信念は新聞には大事なことだと思うけど",
                    "広く情報を伝えるという観点も大事にしてもらいたいよ"),
            ma.think().d("その$ln_okumuraに会ったのはもう五年も前になる。",
                    "半年持たずに$newspaperを辞めてしまったのに未だにこうして$ln_sugiokaによくしてもらっているのは",
                    "あの鬼瓦のようなデスクに対する共闘心が芽生えたからかも知れない"),
            sugi.talk("会社は辞めてフリーになる").t("実はなんだけどさ",
                    "$me", "今日会社を辞めてきたんだ"),
            ma.talk().t("え？"),
            sugi.talk().t("東京の知人がやってる番組製作会社を手伝ってないかって",
                    "随分前から誘われてたんだ"),
            ma.talk().t("それじゃあ記者辞めちゃうってことですか？"),
            ma.look().d("彼はどこか晴れ晴れした顔で頷いて", "$Hに笑みを見せた"),
            ma.talk().t("そんな……"),
            ma.think().d("思わず出そうになった残念という言葉こそ呑み込んだが",
                    "火照りかけていた頬が急に冷たくなるのを感じて",
                    "何度も$ln_sugiokaの顔を見てしまう"),
            sugi.talk().t("それでって訳じゃないんだけど",
                    "$masudaにはこの件を最後まで調べてもらいたいなって思って"),
            ma.look().d("彼はそう言うと鞄から一枚の名刺を取り出す"),
            ma.ask("今どこに？").t("これは？"),
            sugi.talk("埼玉の墓の下").t("$n_husbandの居場所だよ"),
            ma.look().d("その名刺には埼玉県の住所と寺の住職の名前が書かれていた"),
            # NOTE: これはどこか別のところで回想的に
            sugi.talk("秀子に関わったからかな"),
            )

def sc_ceasechain(w: wd.World):
    ma, tanabe, miki, pri = w.masuda, w.tanabe, w.miki, w.saipriest
    return w.scene("途絶えた繋がり",
            ma.go(w.stage.train).d("翌日",
                "会社に顔を出してすぐに$Hは名刺に書かれた寺に向かった"),
            ma.go(w.stage.saitamatemple).d("$st_saitamatempleは住宅が並ぶ路地に突如現れる静まり返った門構えで$Hを迎え",
                "寺務所を訪ねると作務衣姿の白髪の女性が住職の許へと案内してくれた"),
            ma.come(w.stage.office),
            w.tag.comment("これまでの簡単なまとめと足取りが途絶えたこと。付き合っていたらしい男は二十年前に病死"),
            ma.talk().t("突然すみません。",
                "$n_husbandという方のことを調べていて",
                "こちらを紹介してもらったもので"),
            ma.look(pri).d("住職というのでもっと年齢がいっているかと思っていたが",
                "応対してくれたのはまだ四十を過ぎたばかりという男性だった。",
                "頭髪も短いだけで剃ってはおらず",
                "恰幅の良い穏やかな表情で",
                "座布団に胡座を掻いて坐っていた"),
            pri.talk().t("どなたのご紹介か分かりませんが",
                "こちらにその$ln_husbandさんという方はいらっしゃいません"),
            ma.think().d("一瞬偽の情報だったのか", "と思ったけれど",
                "住職は「ですが」と続ける"),
            pri.talk().t("$me共の管理する無縁仏の墓に", "その$n_husbandというお名前が刻まれております"),
            ma.ask().t("えっと、それはつまり……"),
            ma.look().d("彼はゆっくり頷くと",
                "立ち上がって奥の棚から和紙を挟んだ何かの台帳を手にすると",
                "その名前が載ったページを見せてくれた"),
            ma.look().d("確かにそこには綺麗な楷書の字で「$n_husband」と書かれている。",
                "年齢は三十としてあるが既に二十年も前の日付になっていた"),
            ma.ask().t("無縁仏ということは",
                "彼は身寄りがない方だったんでしょうか"),
            pri.talk().t("$me共はそういった情報は教わりませんから分からないのですが",
                "通常無縁仏というのは自治体にもよりますが",
                "一定期間役所やその関係先で預かりまして",
                "引き取り手がない",
                "あるいは引き取りを拒否されるような場合",
                "無縁の遺骨として$me共のような寺に収められます"),
            ma.think().d("それならば",
                "やはり$n_husbandと$n_hidekoの間には何も関係がなかったということだろうか。",
                "そういえば肝心の$n_hidekoの遺骨はどうなったのだろう"),
            ma.ask().t("亡くなられた理由とかも分からないんですよね？"),
            pri.talk().t("細かい事情について伝えられることはありませんが", "多くの場合は病死などですね。",
                "最近は孤独死された方のものというのが増えておりまして。",
                "確かこちらの方もご病気だったと聞いてます"),
            ma.think().d("病死。",
                "それも二十年も前の話だ。",
                "直接今回の空き家火災には関係ないだろうが",
                "$n_hidekoが芸能界を引退した時期と重なっていそうなことが気に掛かる"),
            ma.ask().t("参らせていただいても宜しいですか？"),
            ma.look().d("彼はにこやかな表情で一つ頷くと",
                "寺の裏手に案内してくれた"),
            ma.look().d("そこは他の個人墓地に紛れて壁のような墓石が立っているところで",
                "中ほどに$n_husbandの名前が刻まれていた"),
            ma.look().d("住職は去年新しいものを造ったと", "そこから少し山側の墓地にある石碑を差して教えてくれたが",
                    "そこも既に三分の一くらいまで名前が増えていた。",
                    "中には氏名がないまま年月日だけが刻まれているものもあり",
                    "知らないところで名前すら分からないままひっそりと亡くなっていく人間がいるという事実を",
                    "$Hは感じていた"),
            ma.go().d("寺を後にすると",
                    "一度$ln_tanabeに連絡を入れた。",
                    "もう少しこっちで調べてから夕方過ぎには帰ると告げたが",
                    "特に文句を言う風でもなく", "ただ「無理はするな」とだけ返事に添えられていた"),
            ma.go().d("$ln_sugiokaから聞いた学生時代の同級生にも何人か電話や直接会って話を聞くことができたが",
                    "そこで手に入った新しい情報は無く",
                    "また彼らも$n_husbandについてはほとんど覚えてないと言うくらいに印象がなかったようだった"),
            ma.go().d("結局$n_husbandの墓参りをしただけで",
                    "再び糸川町へと戻ることになった"),
            ma.be().d("帰りの新幹線はまるでもう東京へは来るなというばかりに",
                    "混雑した車内の中で赤ん坊や子供たちの賑やかな声が始終響いていて",
                    "とても落ち着いて考え事などできなかった"),
            ma.talk(tanabe, "諸々").t("あれ？",
                    "まだ$ln_tanabeさん帰ってなかったんですか？"),
            ma.look().d("会社に着いた時には既に七時を回っていたが",
                    "チーフの$ln_tanabeだけは残ってパソコンに向かっていた"),
            miki.talk("ひっそり発表"),
            tanabe.talk().t("ちょっと残業があってな"),
            ma.think().d("普段は定時上がりを旨としているので",
                    "ひょっとすると自分の所為だろうかと思い",
                    "彼のパソコンを覗いてみる"),
            ma.look("web記事").d("ブラウザには$newspaperのサイトが開かれていて",
                    "そこには十七時の記事として『先日の空き家火災の遺体のうち一体は$n_h_laterという女性と発表があった』と書かれていた"),
            ma.ask().t("$n_hideko……の", "本名？"),
            tanabe.talk().t("ああ", "たぶんそうだろう"),
            ma.know("本名"),
            ma.think("同じ苗字").t("$ln_h_later……"),
            tanabe.ask().t("どうした？"),
            ma.talk().t("あ、いえ……"),
            ma.think().d("それは今日自分が参ってきた無縁仏になった男と同じ苗字だった"),
            ma.ask(tanabe, "無縁仏の行方"),
            )

def sc_townofficer(w: wd.World):
    ma, hino = w.masuda, w.hino
    return w.scene("役所の対応",
            ma.come(w.stage.townoffice).d("次の日",
                "窓口が開くのを待って役所の市民課に駆け込んだ"),
            # NOTE: 対応は「市民課」等
            ma.ask().t("すみません。",
                "$st_officeの者ですが",
                "葬儀関係の担当の方をお願いしたいんですが"),
            ma.meet(w.hino).t("はいはいはい。",
                "ちょっと待ってねー"),
            ma.look().d("窓口に現れたのは眼鏡を掛けた$Hの母親と同世代に見える女性だった"),
            hino.talk().t("どうされましたか？",
                "ご家族の誰かお亡くなりですか？"),
            ma.think().d("まるで事務処理といった体で口元に笑みを浮かべながら淡々と訊いてくるが",
                "もし本当に自分の親を亡くしてここに来ていたら",
                "強く拳を握り締めたことだろう"),
            ma.ask().t("そうではなくて", "昨日の$newspaperで確認したんですが",
                "先日の空き家火災の身元不明遺体", "一人の名前が判明したということはそのうちこちらに預けられるんですか？"),
            ma.look().d("担当の女性は一度後ろを振り返って上司の顔色を伺ったが",
                "無視されたので肩を小さく竦めると", "小声になって教えてくれた"),
            hino.talk().t("それが何でもご遺体を確認された方が受け取りを拒否されたらしいんで",
                "こちらで火葬した後は二週間預かってから",
                "他に受け取られる方がいない場合は決まったお寺に無縁仏としてお渡ししてます"),
            ma.think().d("その手順はほぼ$n_husbandを埋葬したお寺の住職から聞いた話の通りだった"),
            ma.think().d("それと同時に今の彼女の話で",
                "$n_shokoは$n_hidekoの魂を引き取ることはしなかったのだと知らされて",
                "あの二人の関係性というのはそんなに簡単に繋がるようなものではないのだな",
                "と感じた"),
            ma.ask().t("仮に無縁仏になる場合は", "どちらのお寺に渡されるんでしょうか？"),
            hino.talk().t("今はこちらですね"),
            ma.look().d("彼女が引き出しから取り出したのは",
                "$Hの祖父母が世話になっているお寺のパンフレットだった"),
            ma.hear(w.hino, w.i.deal_deads),
            hino.talk("無縁仏の扱い"),
            ma.ask("秀子は？"),
            )

def sc_unrelated(w: wd.World):
    ma, priest = w.masuda, w.priest
    return w.scene("無縁仏",
            ma.go(w.stage.temple).d("$st_templeは海岸線を含めた街並を一望できる南の山の中腹にあって",
                "途中で$Hの実家とその田畑が広がる場所を通り抜ける"),
            ma.think().d("自分がお寺に行ったと後で知れたらどうして実家に立ち寄って顔の一つも見せていかないのかと",
                "一時間ばかり小言を言われるだろうが",
                "どうせ祖母の三回忌で顔を合わせるだろうからと",
                "思い切り素通りして行った"),
            ma.look().d("砂利を敷き詰めた上にロープで区切っただけのだだっ広い駐車場に車を停めると",
                "鞄を手に石段を登る。",
                "子供の頃は五十段あるのをどれだけ早く駆け上がれるかなんてことをやったが",
                "今ではエスカレータにでもしてくれないだろうかと思うほど",
                "足を上げるのが億劫になってしまった"),
            ma.talk().t("あのー、すみません。",
                "山ノ下の$ln_masudaです"),
            ma.think().d("玄関を開けて大声で呼びかける。",
                "インタフォンを押しても結局声を掛けないといけないので",
                "知っている人間は誰もボタンを押さない"),
            ma.look().d("三分ほどすると奥から猫背の奥さんが出てきて",
                "「ちょっと待って下さいね」と言ってまた奥へと引っ込んでいった"),
            ma.deal().d("更に四、五分の猶予があるので",
                "靴を脱ぐとそのまま板の間に上がり", "奥の本堂の方へと入ってしまう"),
            priest.talk().t("なんだ。",
                "$ln_masudaのところの倅か。",
                "ばあさんの三回忌の話ならちゃんと忘れてないから安心しろ"),
            ma.look().d("頭は綺麗に剃っているのに眉毛が昔の野球漫画みたいに太くて濃い。",
                "それに加えて胴回りが狸の置物のように豊かで", "七福神のうちの一人を思い起こさせる風貌なのは",
                "十年以上前から変わらないままだ"),
            ma.talk(w.priest).t("うちの話で来たんじゃないです。",
                "今日はちゃんとした取材です"),
            priest.talk().t("坊主に取材とは説法の一つもして欲しいということか？"),
            ma.talk().t("そうじゃないですよ。",
                "ほら", "こちらって役所から無縁仏の処理を頼まれているでしょう？"),
            ma.deal().d("何がまずかったのか",
                "思い切り右手の甲を叩かれた"),
            priest.talk().t("仏様に対して”処理”とは何だ。",
                "ほんとに最近の記者連中というのは日本語がなっとらんなあ"),
            ma.talk().t("すみません。",
                "言葉の綾でした"),
            priest.talk().t("で、無縁仏について知りたいのか？"),
            ma.talk().t("それは大丈夫です。",
                "ちゃんと勉強しましたから。",
                "それよりも、ほら",
                "この前の空き家火災で出た二つの遺体のことなんです"),
            ma.look().d("話は知っているのか", "住職は軽く頷くと$Hの言葉を待った"),
            w.priest.talk("無縁仏の処理"),
            ma.hear(w.priest, w.i.deal_deads),
            w.priest.talk("この前の火災の"),
            ma.ask().t("うち一人は名前も判明したんですが",
                "どうもこちらの世話になりそうだということらしいんです"),
            priest.talk().t("そうみたいだな"),
            ma.ask().t("え？",
                    "知ってるんですか？"),
            ma.look().d("そう尋ねた瞬間に", "住職は顔を顰めてから視線を背けた"),
            ma.ask().t("何ですか？",
                    "何か聞いてるんですか？"),
            priest.talk().t("何も聞いとらん。",
                    "聞いとらんが……"),
            ma.look().d("言葉を呑み込んでぎろっと目を向けると",
                    "咳払いをしてから手を当てて小声になる"),
            priest.talk().t("世話になってる医者がその仏さんの検死を担当したそうでな",
                    "普通なら守秘義務だなんだと言って教えてくれんのだが",
                    "今回のはちょっと奇妙なものが見つかったというので",
                    "こっちが聞いてもおらんのに色々とまあ話してくれたよ。",
                    "その時にそんなことを言われたのでな……誰にも言うなよ"),
            ma.think().d("検死という言葉に", "その可能性を探らなかったことを一瞬後悔する"),
            ma.think().d("けれど$ln_sugiokaが既にその線は当たっている可能性が高い。",
                    "それなら何故彼はそれを教えてくれなかったのだろう。",
                    "やはり自分の足で探せ", "ということだろうか"),
            ma.ask().t("あの、すみません。",
                    "そのお医者さんなんですが"),
            ma.deal().d("$Hは住職から聞いた診療所の住所を控えると",
                    "あれこれと両親が心配していた等と言い出した彼に苦笑を渡して",
                    "さっさと玄関に向かった"),
            ma.know(w.doc),
            )

def sc_inquest(w: wd.World):
    ma, doc = w.masuda, w.doc
    return w.scene("検死結果",
            ma.go().d("$st_medicalsは大通りを外れて",
                "一本入ったところの更に脇の路地を抜けた住宅街の中にあった"),
            ma.come(w.stage.medicals, w.day.interview3).d("隣接する土の駐車スペースに車を停め",
                "小さな看板の出ている玄関を潜る"),
            ma.ask().t("すみません……"),
            ma.look().d("そっとドアを開けて中に入ると",
                "受付の窓口から眼鏡を掛けた老婆が顔を出して$Hに名前と簡単な症状を尋ねたが",
                "自分は診察に来たのではなくて記者であり", "検死の件についてインタビューがしたいと申し出ると",
                "一瞬怪訝な顔をされたが", "しばらく待っているように言われてソファに腰を下ろした"),
            ma.think().d("暇な時間帯なのか",
                "$H以外に待合室にいるのは一人の白髪の女性と", "まだ立ち上がるのがやっとという子連れの母親だけだ"),
            ma.deal().d("その二組の診察を終えると声を掛けられ",
                "受付の老婆に言われるまま",
                "診察室のドアを潜った"),
            doc.talk().t("さっき$st_templeの住職さんから電話を貰ったよ。",
                "けど話せないことは口にできないからね。",
                "それでも記事になるの？"),
            ma.talk().t("記事にはならないと思います", "たぶん"),
            ma.look().d("そう答えると白い眉毛を凹ませて口元を覆っていたマスクを外す"),
            doc.talk().t("じゃあ記事にしないのに",
                "その遺体の人のことを調べて回ってるの？"),
            ma.look().d("$ln_doc医師は小さな目をそれでも大きくして驚いたが",
                "$Hの姿勢が冗談ではないと分かると",
                "顎髭を撫でなら教えてくれた"),
            doc.talk().t("君は焼死体って見たことある？"),
            ma.reply().t("写真では何度か。",
                "ただ実物は目にしたことありません"),
            ma.know(w.doc),
            ma.meet(w.doc),
            ma.talk(w.doc, w.i.doc_secret),
            doc.talk("遺体について").t("人間も物なんだけどそれが燃えるということは",
                "これはなかなか大変なものでね",
                "もし簡単に炭にしてしまえるなら火葬場のあんな大きな炉は必要ないんだ"),
            ma.think().d("確かに$Hが目にしたことがあるのは戦争や災害で焼け出された人たちのものだ。",
                "それらは大半が学生時代に無理やり学習の一環として見せられたものであり",
                "とても現実のものだなんて思えずに",
                "ただ胸が気持ち悪くなった感覚だけが残っている"),
            doc.talk().t("人体の六、七割は水分だからそもそもが燃え難い素材なんだよ。",
                "それに加えて皮膚や筋肉というのは火が付き辛い。",
                "火の中に飛び込んでもまず燃えるのは着ている服や下着の方だね"),
            ma.ask().t("えっと、それで検死された遺体ですけど"),
            ma.think().d("このままだと際限なく人間を燃やす方法について聞かされそうな気がして",
                "$Hは口を挟んだ"),
            doc.talk().t("ああ、そうそう。",
                "肝心の火事に遭った遺体の方なんだけど",
                "二つ見つかったのは知っているよね？"),
            ma.behav().d("ええ", "と頷いて次を促す"),
            doc.talk().t("どちらも女性だったんだけど",
                "身元が分かった方",
                "これは火元に近かった所為か皮膚の表面がかなりの部分炭化していた。",
                "つまり炭になっていたってことね。",
                "結構な強火で長時間焼かないとこうはならないから",
                "警察の方には自殺の可能性もあるよって言っといたんだけど",
                "現場を見た訳じゃないからそれ以上はどうこう言えないね"),
            ma.think().d("$n_hidekoが自殺した",
                    "というのは今まで調べてきて感じた彼女の人物像からは",
                    "ほど遠いもののように感じられた"),
            doc.talk().t("死因は火災現場で一番多い一酸化炭素中毒死。",
                    "これについてはもう一つの方も同じだった。",
                    "一酸化炭素は早いよ。",
                    "０．１％あれば１、２分で致死圏内だから。",
                    "目に見えないし",
                    "何か変だなって思ったらもう体が動かなくてそのままってことが殆どじゃないかな"),
            ma.think().d("$ln_doc医師は時折笑いを交えて語る。",
                    "$Hはこういった話題に耐性がない訳ではないが",
                    "それでも昼食は胃に優しいものにしようと思った"),
            doc.talk().t("もう一つの方は全身が赤くなって水ぶくれの酷い状態だったね。",
                    "おそらくこっちの彼女の方がその部屋に長くいたんじゃないだろうか。",
                    "こちらの彼女は随分と小柄で年齢もおそらくもう一人の女性よりかなり若かったように見えたよ"),
            ma.ask().t("警察には死因についてだけ話されたんですか？"),
            doc.talk().t("そうそう。",
                    "自殺かどうか",
                    "それから誰かに殺されて地下室に放置されていたんじゃないか",
                    "そんな可能性について聞かれただけだよ。",
                    "だから一番おかしいと思ったことを教えてやったのに",
                    "それは必要ない情報だと言われてな。",
                    "結局所見から削られてしまったわ"),
            ma.think().d("そういえば住職が「今回は奇妙なものが見つかった」と聞いたと言ってたことを思い出す"),
            ma.ask().t("そのおかしなことって何だったんですか？"),
            doc.talk().t("誰も信じんから一度しか言わんぞ"),
            ma.hear(w.doc, w.deadbody).d("$ln_docは喉に掛かる声でそう言うと",
                    "小さく咳払いをし", "姿勢を低くしてこう続けた"),
            doc.talk("あれは臍の緒だった").t("その小柄な方の女性のね",
                    "この臍のところから五センチくらい", "細いものが出てたんだよ"),
            ma.ask().t("臍の", "緒？"),
            ma.look().d("$ln_docは小さく頷く"),
            doc.talk().t("普通臍の緒というのは出産後にカットして",
                    "残った部分はぽろっと取れてしまうものなんだけど",
                    "ありゃあどう見ても臍の緒だったんだよな。",
                    "まあ長年医者してきてあんなもの見たことないし誰に言ったところで信じちゃくれなかったが",
                    "それでも思うんだよ。",
                    "あれは臍の緒の残り物なんだって"),
            ma.know(w.anotherbody, w.benio),
            ma.know(w.i.truth),
            ma.think(cnf.THEMES["chain"]),
            )

def sc_thesite(w: wd.World):
    ma, takamori = w.masuda, w.takamori
    return w.scene("火災現場",
            ma.come(w.stage.thesite),
            ma.look("再度調査"),
            ma.meet(takamori),
            takamori.talk("ずっと空き家だったが誰か住んでた"),
            takamori.talk("幽霊の話があってな"),
            ).omit()

# episodes
def ep_truth(w: wd.World):
    return [w.chaptertitle("彼女の真実"),
            sc_gobacktown(w),
            sc_sugiokatalk(w),
            sc_ceasechain(w),
            sc_townofficer(w),
            sc_unrelated(w),
            sc_inquest(w),
            sc_thesite(w),
            ]

# main
def story(w: wd.World):
    return ep_truth(w)


def main(): # pragma: no cover
    from src.redchain.story import world
    w = world()
    return w.build(story(w))


if __name__ == '__main__':
    import sys
    sys.exit(main())

